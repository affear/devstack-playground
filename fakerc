#!/bin/bash

TOPDIR=$(pwd)

if [ ! $(basename `pwd`) = "fakestack" ]; then
	echo "source this file from its containing folder, please..."
	return 1
fi

# function to check if docker is running
function is_docker_up {
	local DOC_P
	DOC_P=$(ps -A | grep docker)
	if [ -z "$DOC_P" ]; then
		echo "WARNING: docker is not running..."
		echo "start it with:"
		echo "sudo service docker start"
		return 1
	fi

	return 0
}

# add scripts to PATH
export PATH=scripts:$PATH
# aliases
alias ftools_runcmp="ftools_runcmps 1"

# usefull functions
function ftools_build {
	local SHORT_NAME=$1
	local LONG_NAME

	if [ $# -eq 0 ]; then
		echo "Give short name, please."
		return 1
	fi

	if [ $SHORT_NAME = "ctrl" ]; then
		LONG_NAME="controller"
	elif [ $SHORT_NAME = "cmp" ]; then
		LONG_NAME="compute"
	else
		echo "Name must match 'ctrl' or 'cmp'"
		return 1
	fi

	if [ ! $(pwd) = "$TOPDIR/$LONG_NAME" ]; then
		echo "You must execute this script in $(basename $TOPDIR)/$LONG_NAME"
		return 1
	fi

	if [[ ! $(is_docker_up) ]]; then
		return 1
	fi

	echo "Building affear/$SHORT_NAME:ok..."
	tar -czh . | docker build -t affear/$SHORT_NAME:ok -
	return 0
}

function ftools_attach {
	if [ $# -eq 0 ]; then
		echo "Give container ID or name, please."
		return 1
	fi

	if [[ ! $(is_docker_up) ]]; then
		return 1
	fi

	docker attach $1
	return 0
}

function ftools_reinstall_nova {
	if [ $# -eq 0 ]; then
		echo "Give container ID or name, please."
		return 1
	fi

	if [[ ! $(is_docker_up) ]]; then
		return 1
	fi

	docker exec $1 ./reinstall_service.sh nova
	return 0
}

# everything is ok
return 0